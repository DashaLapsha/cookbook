name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  CONTAINER_NAME: cookinglegacy_container 
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/cooking_legacy_rep
  TASK_FAMILY_NAME: ${{ secrets.TASK_FAMILY_NAME }}

jobs:
  build_and_deploy:
    name: Build and Deploy to Amazon ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install jq (JSON processor)
        run: sudo apt-get install -y jq

      - name: Get current task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.TASK_FAMILY_NAME }} \
            --query 'taskDefinition' \
            > task-definition.json

      - name: Update task definition with new image
        run: |
          NEW_IMAGE="${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}"
          jq --arg IMAGE "$NEW_IMAGE" '.containerDefinitions[0].image=$IMAGE' task-definition.json > new-task-definition.json

      - name: Register new task definition
        id: register-task-def
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-definition.json --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "::set-output name=TASK_DEF_ARN::$TASK_DEF_ARN"

      - name: Update ECS service with new task definition
        run: |
          aws ecs update-service \
            --cluster ${{ env.CLUSTER_NAME }} \
            --service ${{ env.SERVICE_NAME }} \
            --task-definition ${{ steps.register-task-def.outputs.TASK_DEF_ARN }} \
            --force-new-deployment
